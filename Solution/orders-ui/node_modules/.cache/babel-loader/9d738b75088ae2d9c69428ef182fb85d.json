{"ast":null,"code":"import { FETCH_ORDERS, FETCH_ORDER_WITH_DETAILS } from \"./types\";\nimport { apiConfig } from \"./config\";\nimport { adalApiFetch, authContext } from \"../adal/config\";\nexport var fetchOrders = function fetchOrders() {\n  return function (dispatch) {\n    // adalApiFetch(fetch, apiConfig.endPoint + \"/orders/get\", {\n    //   mode: \"no-cors\",\n    //   method: \"GET\",\n    //   withCredentials: true,\n    //   credentials: \"include\",\n    //   headers: new Headers({\n    //     Authorization:\n    //       \"Bearer \" + authContext.getCachedToken(authContext.config.clientId),\n    //     \"Content-Type\": \"application/json\"\n    //   })\n    // })\n    var token = authContext.getCachedToken(authContext.config.clientId);\n    fetch(apiConfig.endPoint + \"/orders/get\", {\n      mode: \"no-cors\",\n      method: \"GET\" // headers: {\n      //   Authorization: \"Bearer \" + token,\n      //   \"Content-Type\": \"application/json\"\n      // }\n\n    }).then(function (res) {\n      return res.json();\n    }, function (err) {\n      return console.error(err);\n    }).then(function (orders) {\n      return dispatch({\n        type: FETCH_ORDERS,\n        payload: orders\n      });\n    });\n  };\n};\nexport var fetchFullOrder = function fetchFullOrder(orderId) {\n  return function (dispatch) {\n    fetch(apiConfig.endPoint + \"/orders/getFullOrder/\" + orderId, {\n      mode: \"no-cors\",\n      method: \"GET\",\n      headers: apiConfig.getHeader()\n    }, \"\").then(function (res) {\n      return res.json();\n    }).then(function (fullOrder) {\n      return dispatch({\n        type: FETCH_ORDER_WITH_DETAILS,\n        payload: fullOrder\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Leo\\Apps\\OrdersMgr\\orders-ui\\src\\actions\\orderAction.js"],"names":["FETCH_ORDERS","FETCH_ORDER_WITH_DETAILS","apiConfig","adalApiFetch","authContext","fetchOrders","dispatch","token","getCachedToken","config","clientId","fetch","endPoint","mode","method","then","res","json","err","console","error","orders","type","payload","fetchFullOrder","orderId","headers","getHeader","fullOrder"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,wBAAvB,QAAuD,SAAvD;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,gBAA1C;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,KAAK,GAAGH,WAAW,CAACI,cAAZ,CAA2BJ,WAAW,CAACK,MAAZ,CAAmBC,QAA9C,CAAZ;AACAC,IAAAA,KAAK,CAACT,SAAS,CAACU,QAAV,GAAqB,aAAtB,EAAqC;AACxCC,MAAAA,IAAI,EAAE,SADkC;AAExCC,MAAAA,MAAM,EAAE,KAFgC,CAGxC;AACA;AACA;AACA;;AANwC,KAArC,CAAL,CAQGC,IARH,CAQQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KARX,EAQ2B,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAR9B,EASGH,IATH,CASQ,UAAAM,MAAM;AAAA,aACVf,QAAQ,CAAC;AACPgB,QAAAA,IAAI,EAAEtB,YADC;AAEPuB,QAAAA,OAAO,EAAEF;AAFF,OAAD,CADE;AAAA,KATd;AAeD,GA5B0B;AAAA,CAApB;AA8BP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO;AAAA,SAAI,UAAAnB,QAAQ,EAAI;AACnDK,IAAAA,KAAK,CACHT,SAAS,CAACU,QAAV,GAAqB,uBAArB,GAA+Ca,OAD5C,EAEH;AACEZ,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,MAAM,EAAE,KAFV;AAGEY,MAAAA,OAAO,EAAExB,SAAS,CAACyB,SAAV;AAHX,KAFG,EAOH,EAPG,CAAL,CASGZ,IATH,CASQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KATX,EAUGF,IAVH,CAUQ,UAAAa,SAAS;AAAA,aACbtB,QAAQ,CAAC;AACPgB,QAAAA,IAAI,EAAErB,wBADC;AAEPsB,QAAAA,OAAO,EAAEK;AAFF,OAAD,CADK;AAAA,KAVjB;AAgBD,GAjBoC;AAAA,CAA9B","sourcesContent":["import { FETCH_ORDERS, FETCH_ORDER_WITH_DETAILS } from \"./types\";\r\nimport { apiConfig } from \"./config\";\r\nimport { adalApiFetch, authContext } from \"../adal/config\";\r\nexport const fetchOrders = () => dispatch => {\r\n  // adalApiFetch(fetch, apiConfig.endPoint + \"/orders/get\", {\r\n  //   mode: \"no-cors\",\r\n  //   method: \"GET\",\r\n  //   withCredentials: true,\r\n  //   credentials: \"include\",\r\n  //   headers: new Headers({\r\n  //     Authorization:\r\n  //       \"Bearer \" + authContext.getCachedToken(authContext.config.clientId),\r\n  //     \"Content-Type\": \"application/json\"\r\n  //   })\r\n  // })\r\n  var token = authContext.getCachedToken(authContext.config.clientId);\r\n  fetch(apiConfig.endPoint + \"/orders/get\", {\r\n    mode: \"no-cors\",\r\n    method: \"GET\"\r\n    // headers: {\r\n    //   Authorization: \"Bearer \" + token,\r\n    //   \"Content-Type\": \"application/json\"\r\n    // }\r\n  })\r\n    .then(res => res.json(), err => console.error(err))\r\n    .then(orders =>\r\n      dispatch({\r\n        type: FETCH_ORDERS,\r\n        payload: orders\r\n      })\r\n    );\r\n};\r\n\r\nexport const fetchFullOrder = orderId => dispatch => {\r\n  fetch(\r\n    apiConfig.endPoint + \"/orders/getFullOrder/\" + orderId,\r\n    {\r\n      mode: \"no-cors\",\r\n      method: \"GET\",\r\n      headers: apiConfig.getHeader()\r\n    },\r\n    \"\"\r\n  )\r\n    .then(res => res.json())\r\n    .then(fullOrder =>\r\n      dispatch({\r\n        type: FETCH_ORDER_WITH_DETAILS,\r\n        payload: fullOrder\r\n      })\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}