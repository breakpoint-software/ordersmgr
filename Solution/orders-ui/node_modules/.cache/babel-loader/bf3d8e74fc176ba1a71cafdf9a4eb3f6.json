{"ast":null,"code":"import _classCallCheck from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\src\\\\components\\\\orders.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"../actions/orderAction\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\n\nvar Orders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Orders)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleOrderClick = function () {};\n\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchOrders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var options = {\n        page: 2,\n        // which page you want to show as default\n        sizePerPageList: [{\n          text: \"5\",\n          value: 5\n        }, {\n          text: \"10\",\n          value: 10\n        }, {\n          text: \"All\",\n          value: this.props.orders.length\n        }],\n        // you can change the dropdown list for size per page\n        sizePerPage: 5,\n        // which size per page you want to locate as default\n        pageStartIndex: 0,\n        // where to start counting the pages\n        paginationSize: 3,\n        // the pagination bar size.\n        prePage: \"Prev\",\n        // Previous page button text\n        nextPage: \"Next\",\n        // Next page button text\n        firstPage: \"First\",\n        // First page button text\n        lastPage: \"Last\",\n        // Last page button text\n        paginationShowsTotal: this.renderShowsTotal,\n        // Accept bool or function\n        paginationPosition: \"top\" // default is bottom, top and both is all available\n        // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n        // alwaysShowAllBtns: true // Always show next and previous button\n        // withFirstAndLast: false > Hide the going to First and Last page button\n\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.props.orders,\n        bordered: false,\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"id\"), React.createElement(TableHeaderColumn, {\n        dataField: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Description\"), React.createElement(TableHeaderColumn, {\n        dataField: \"customer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Customer\"), React.createElement(TableHeaderColumn, {\n        dataField: \"fecha\",\n        dataAlign: \"center\",\n        headerAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Date\"), React.createElement(TableHeaderColumn, {\n        dataField: \"quantity\",\n        dataAlign: \"right\",\n        headerAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(TableHeaderColumn, {\n        dataField: \"total\",\n        dataAlign: \"right\",\n        headerAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Total\"))));\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nOrders.propTypes = {\n  fetchOrders: PropTypes.func.isRequired,\n  orders: PropTypes.array.isRequired\n};\n\nvar MapOrdersToState = function MapOrdersToState(state) {\n  return {\n    orders: state.orders.items\n  };\n};\n\nexport default connect(MapOrdersToState, {\n  fetchOrders: fetchOrders\n})(Orders);","map":{"version":3,"sources":["C:\\Leo\\Apps\\OrdersMgr\\orders-ui\\src\\components\\orders.jsx"],"names":["React","Component","PropTypes","connect","fetchOrders","BootstrapTable","TableHeaderColumn","Orders","handleOrderClick","props","options","page","sizePerPageList","text","value","orders","length","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationShowsTotal","renderShowsTotal","paginationPosition","propTypes","func","isRequired","array","MapOrdersToState","state","items"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchOrders } from \"../actions/orderAction\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\n\r\nclass Orders extends Component {\r\n  componentWillMount() {\r\n    this.props.fetchOrders();\r\n  }\r\n\r\n  handleOrderClick = () => {};\r\n\r\n  render() {\r\n    const options = {\r\n      page: 2, // which page you want to show as default\r\n      sizePerPageList: [\r\n        {\r\n          text: \"5\",\r\n          value: 5\r\n        },\r\n        {\r\n          text: \"10\",\r\n          value: 10\r\n        },\r\n        {\r\n          text: \"All\",\r\n          value: this.props.orders.length\r\n        }\r\n      ], // you can change the dropdown list for size per page\r\n      sizePerPage: 5, // which size per page you want to locate as default\r\n      pageStartIndex: 0, // where to start counting the pages\r\n      paginationSize: 3, // the pagination bar size.\r\n      prePage: \"Prev\", // Previous page button text\r\n      nextPage: \"Next\", // Next page button text\r\n      firstPage: \"First\", // First page button text\r\n      lastPage: \"Last\", // Last page button text\r\n      paginationShowsTotal: this.renderShowsTotal, // Accept bool or function\r\n      paginationPosition: \"top\" // default is bottom, top and both is all available\r\n      // hideSizePerPage: true > You can hide the dropdown for sizePerPage\r\n      // alwaysShowAllBtns: true // Always show next and previous button\r\n      // withFirstAndLast: false > Hide the going to First and Last page button\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <BootstrapTable\r\n            data={this.props.orders}\r\n            bordered={false}\r\n            striped\r\n            hover\r\n          >\r\n            <TableHeaderColumn isKey={true} dataField=\"id\">\r\n              id\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"description\">\r\n              Description\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"customer\">Customer</TableHeaderColumn>\r\n            <TableHeaderColumn\r\n              dataField=\"fecha\"\r\n              dataAlign=\"center\"\r\n              headerAlign=\"center\"\r\n            >\r\n              Date\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn\r\n              dataField=\"quantity\"\r\n              dataAlign=\"right\"\r\n              headerAlign=\"right\"\r\n            >\r\n              Quantity\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn\r\n              dataField=\"total\"\r\n              dataAlign=\"right\"\r\n              headerAlign=\"right\"\r\n            >\r\n              Total\r\n            </TableHeaderColumn>\r\n          </BootstrapTable>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOrders.propTypes = {\r\n  fetchOrders: PropTypes.func.isRequired,\r\n  orders: PropTypes.array.isRequired\r\n};\r\nconst MapOrdersToState = state => ({\r\n  orders: state.orders.items\r\n});\r\nexport default connect(\r\n  MapOrdersToState,\r\n  { fetchOrders }\r\n)(Orders);\r\n"]},"metadata":{},"sourceType":"module"}