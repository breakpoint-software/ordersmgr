{"ast":null,"code":"import _classCallCheck from \"C:\\\\Leo\\\\Apps\\\\New folder\\\\ordersmgr\\\\Solution\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Leo\\\\Apps\\\\New folder\\\\ordersmgr\\\\Solution\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Leo\\\\Apps\\\\New folder\\\\ordersmgr\\\\Solution\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Leo\\\\Apps\\\\New folder\\\\ordersmgr\\\\Solution\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Leo\\\\Apps\\\\New folder\\\\ordersmgr\\\\Solution\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Leo\\\\Apps\\\\New folder\\\\ordersmgr\\\\Solution\\\\orders-ui\\\\src\\\\components\\\\orders.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"../actions/orderAction\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport { withRouter } from \"react-router-dom\";\n\nvar Orders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Orders, _Component);\n\n  _createClass(Orders, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchOrders();\n    }\n  }]);\n\n  function Orders(props) {\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Orders).call(this, props));\n\n    _this.handleRowClick = function (order) {\n      _this.props.history.push(\"orderDetails\", {\n        orderId: order.id\n      });\n    };\n\n    _this.dateFormatter = function (cell) {\n      if (!cell) {\n        return \"\";\n      }\n\n      return new Intl.DateTimeFormat(\"en-GB\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"2-digit\"\n      }).format(new Date(cell));\n    };\n\n    _this.options = {\n      page: 1,\n      sizePerPageList: [{\n        text: \"5\",\n        value: 5\n      }, {\n        text: \"10\",\n        value: 10\n      }, {\n        text: \"All\",\n        value: _this.props.orders.length\n      }],\n      sizePerPage: 10,\n      pageStartIndex: 1,\n      paginationSize: 3,\n      prePage: \"Prev\",\n      nextPage: \"Next\",\n      firstPage: \"First\",\n      lastPage: \"Last\",\n      paginationShowsTotal: _this.renderShowsTotal,\n      paginationPosition: \"both\",\n      onRowClick: _this.handleRowClick,\n      defaultSortName: \"date\",\n      defaultSortOrder: \"desc\"\n    };\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.props.orders,\n        options: this.options,\n        pagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"id\"), React.createElement(TableHeaderColumn, {\n        dataField: \"description\",\n        dataAlign: \"left\",\n        headerAlign: \"left\",\n        dataSort: true,\n        filter: {\n          type: \"TextFilter\",\n          delay: 1000\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Description\"), React.createElement(TableHeaderColumn, {\n        dataField: \"customer\",\n        dataAlign: \"left\",\n        headerAlign: \"left\",\n        dataSort: true,\n        filter: {\n          type: \"TextFilter\",\n          delay: 1000\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Customer\"), React.createElement(TableHeaderColumn, {\n        dataField: \"date\",\n        dataAlign: \"center\",\n        headerAlign: \"center\",\n        dataSort: true,\n        filter: {\n          type: \"DateFilter\",\n          delay: 1000,\n          dateComparators: [\"=\"]\n        },\n        dataFormat: this.dateFormatter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Date\"), React.createElement(TableHeaderColumn, {\n        dataField: \"quantity\",\n        dataAlign: \"right\",\n        headerAlign: \"right\",\n        dataSort: true,\n        filter: {\n          type: \"NumberFilter\",\n          delay: 1000,\n          withoutEmptyComparatorOption: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(TableHeaderColumn, {\n        dataField: \"total\",\n        dataAlign: \"right\",\n        headerAlign: \"right\",\n        dataSort: true,\n        filter: {\n          type: \"NumberFilter\",\n          delay: 1000,\n          withoutEmptyComparatorOption: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Total\")));\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nOrders.propTypes = {\n  fetchOrders: PropTypes.func.isRequired,\n  orders: PropTypes.array.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nvar MapOrdersToState = function MapOrdersToState(state) {\n  return {\n    orders: state.orderReducer.items\n  };\n};\n\nexport default withRouter(connect(MapOrdersToState, {\n  fetchOrders: fetchOrders\n})(Orders));","map":{"version":3,"sources":["C:\\Leo\\Apps\\New folder\\ordersmgr\\Solution\\orders-ui\\src\\components\\orders.jsx"],"names":["React","Component","PropTypes","connect","fetchOrders","BootstrapTable","TableHeaderColumn","withRouter","Orders","props","handleRowClick","order","history","push","orderId","id","dateFormatter","cell","Intl","DateTimeFormat","year","month","day","format","Date","options","page","sizePerPageList","text","value","orders","length","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationShowsTotal","renderShowsTotal","paginationPosition","onRowClick","defaultSortName","defaultSortOrder","type","delay","dateComparators","withoutEmptyComparatorOption","propTypes","func","isRequired","array","object","MapOrdersToState","state","orderReducer","items"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchOrders } from \"../actions/orderAction\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Orders extends Component {\r\n  componentWillMount() {\r\n    this.props.fetchOrders();\r\n  }\r\n\r\n  handleRowClick = order => {\r\n    this.props.history.push(\"orderDetails\", { orderId: order.id });\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.options = {\r\n      page: 1,\r\n      sizePerPageList: [\r\n        {\r\n          text: \"5\",\r\n          value: 5\r\n        },\r\n        {\r\n          text: \"10\",\r\n          value: 10\r\n        },\r\n        {\r\n          text: \"All\",\r\n          value: this.props.orders.length\r\n        }\r\n      ],\r\n      sizePerPage: 10,\r\n      pageStartIndex: 1,\r\n      paginationSize: 3,\r\n      prePage: \"Prev\",\r\n      nextPage: \"Next\",\r\n      firstPage: \"First\",\r\n      lastPage: \"Last\",\r\n      paginationShowsTotal: this.renderShowsTotal,\r\n      paginationPosition: \"both\",\r\n      onRowClick: this.handleRowClick,\r\n      defaultSortName: \"date\",\r\n      defaultSortOrder: \"desc\"\r\n    };\r\n  }\r\n\r\n  dateFormatter = cell => {\r\n    if (!cell) {\r\n      return \"\";\r\n    }\r\n\r\n    return new Intl.DateTimeFormat(\"en-GB\", {\r\n      year: \"numeric\",\r\n      month: \"numeric\",\r\n      day: \"2-digit\"\r\n    }).format(new Date(cell));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <BootstrapTable\r\n          data={this.props.orders}\r\n          options={this.options}\r\n          pagination={true}\r\n        >\r\n          <TableHeaderColumn isKey={true} dataField=\"id\" hidden>\r\n            id\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"description\"\r\n            dataAlign=\"left\"\r\n            headerAlign=\"left\"\r\n            dataSort\r\n            filter={{ type: \"TextFilter\", delay: 1000 }}\r\n          >\r\n            Description\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"customer\"\r\n            dataAlign=\"left\"\r\n            headerAlign=\"left\"\r\n            dataSort\r\n            filter={{ type: \"TextFilter\", delay: 1000 }}\r\n          >\r\n            Customer\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"date\"\r\n            dataAlign=\"center\"\r\n            headerAlign=\"center\"\r\n            dataSort\r\n            filter={{\r\n              type: \"DateFilter\",\r\n              delay: 1000,\r\n              dateComparators: [\"=\"]\r\n            }}\r\n            dataFormat={this.dateFormatter}\r\n          >\r\n            Date\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"quantity\"\r\n            dataAlign=\"right\"\r\n            headerAlign=\"right\"\r\n            dataSort\r\n            filter={{\r\n              type: \"NumberFilter\",\r\n              delay: 1000,\r\n              withoutEmptyComparatorOption: true\r\n            }}\r\n          >\r\n            Quantity\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn\r\n            dataField=\"total\"\r\n            dataAlign=\"right\"\r\n            headerAlign=\"right\"\r\n            dataSort\r\n            filter={{\r\n              type: \"NumberFilter\",\r\n              delay: 1000,\r\n              withoutEmptyComparatorOption: true\r\n            }}\r\n          >\r\n            Total\r\n          </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOrders.propTypes = {\r\n  fetchOrders: PropTypes.func.isRequired,\r\n  orders: PropTypes.array.isRequired,\r\n  history: PropTypes.object.isRequired\r\n};\r\nconst MapOrdersToState = state => ({\r\n  orders: state.orderReducer.items\r\n});\r\nexport default withRouter(\r\n  connect(\r\n    MapOrdersToState,\r\n    { fetchOrders }\r\n  )(Orders)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}