{"ast":null,"code":"import _classCallCheck from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Leo\\\\Apps\\\\OrdersMgr\\\\orders-ui\\\\src\\\\components\\\\orders.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"../actions/orderAction\";\n\nvar Orders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    _classCallCheck(this, Orders);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Orders).apply(this, arguments));\n  }\n\n  _createClass(Orders, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchOrders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // var items = this.props.orders.map(o => <div key={o.value} />);\n      return;\n      React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, items, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"hello\"), \";\");\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nOrders.propTypes = {\n  fetchOrders: PropTypes.func.isRequired,\n  orders: PropTypes.array.isRequired\n};\n\nvar ordersMapState = function ordersMapState(state) {\n  return {\n    orders: state.orders.items\n  };\n};\n\nexport default connect(ordersMapState, {\n  fetchOrders: fetchOrders\n})(Orders);","map":{"version":3,"sources":["C:\\Leo\\Apps\\OrdersMgr\\orders-ui\\src\\components\\orders.jsx"],"names":["React","Component","PropTypes","connect","fetchOrders","Orders","props","items","propTypes","func","isRequired","orders","array","ordersMapState","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;IAEMC,M;;;;;;;;;;;;;yCACiB;AACnB,WAAKC,KAAL,CAAWF,WAAX;AACD;;;6BAEQ;AACP;AACA;AACA,0BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,KADH,EAEE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAID;;;;EAZkBN,S;;AAerBI,MAAM,CAACG,SAAP,GAAmB;AACjBJ,EAAAA,WAAW,EAAEF,SAAS,CAACO,IAAV,CAAeC,UADX;AAEjBC,EAAAA,MAAM,EAAET,SAAS,CAACU,KAAV,CAAgBF;AAFP,CAAnB;;AAIA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SAAK;AAC/BH,IAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaJ;AADU,GAAL;AAAA,CAA5B;;AAGA,eAAeJ,OAAO,CACpBU,cADoB,EAEpB;AAAET,EAAAA,WAAW,EAAXA;AAAF,CAFoB,CAAP,CAGbC,MAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchOrders } from \"../actions/orderAction\";\r\n\r\nclass Orders extends Component {\r\n  componentWillMount() {\r\n    this.props.fetchOrders();\r\n  }\r\n\r\n  render() {\r\n    // var items = this.props.orders.map(o => <div key={o.value} />);\r\n    return;\r\n    <React.Fragment>\r\n      {items}\r\n      <button className=\"btn btn-primary\">hello</button>;\r\n    </React.Fragment>;\r\n  }\r\n}\r\n\r\nOrders.propTypes = {\r\n  fetchOrders: PropTypes.func.isRequired,\r\n  orders: PropTypes.array.isRequired\r\n};\r\nconst ordersMapState = state => ({\r\n  orders: state.orders.items\r\n});\r\nexport default connect(\r\n  ordersMapState,\r\n  { fetchOrders }\r\n)(Orders);\r\n"]},"metadata":{},"sourceType":"module"}