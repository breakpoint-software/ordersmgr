{"ast":null,"code":"import { FETCH_ORDERS, FETCH_ORDER_WITH_DETAILS } from \"./types\";\nimport { apiConfig } from \"./config\";\nimport { adalApiFetch, adalConfig, authContext } from \"../adal/config\";\nexport var fetchOrders = function fetchOrders() {\n  return function (dispatch) {\n    // adalApiFetch(fetch, \"/orders/get\", {});\n    var token = authContext.getCachedToken(authContext.config.clientId);\n    fetch(adalConfig.endpoints.api + \"/orders/get\", {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }, function (err) {\n      return console.error(err);\n    }).then(function (orders) {\n      return dispatch({\n        type: FETCH_ORDERS,\n        payload: orders\n      });\n    });\n  };\n};\nexport var fetchFullOrder = function fetchFullOrder(orderId) {\n  return function (dispatch) {\n    var token = authContext.getCachedToken(authContext.config.clientId);\n    fetch(apiConfig.endPoint + \"/orders/getFullOrder/\" + orderId, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (fullOrder) {\n      return dispatch({\n        type: FETCH_ORDER_WITH_DETAILS,\n        payload: fullOrder\n      });\n    });\n  };\n};\nexport var updateProductOrder = function updateProductOrder(data) {\n  return function (dispatch) {\n    var token = authContext.getCachedToken(authContext.config.clientId);\n    fetch(apiConfig.endPoint + \"/orders/UpdateProductOrder\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    }, JSON.stringify(data)).then(function (res) {\n      return res.json();\n    }).then(function (fullOrder) {\n      return dispatch({\n        type: FETCH_ORDER_WITH_DETAILS,\n        payload: fullOrder\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Leo\\Apps\\OrdersMgr\\orders-ui\\src\\actions\\orderAction.js"],"names":["FETCH_ORDERS","FETCH_ORDER_WITH_DETAILS","apiConfig","adalApiFetch","adalConfig","authContext","fetchOrders","dispatch","token","getCachedToken","config","clientId","fetch","endpoints","api","headers","Authorization","then","res","json","err","console","error","orders","type","payload","fetchFullOrder","orderId","endPoint","fullOrder","updateProductOrder","data","method","JSON","stringify"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,wBAAvB,QAAuD,SAAvD;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,WAAnC,QAAsD,gBAAtD;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC3C;AACA,QAAIC,KAAK,GAAGH,WAAW,CAACI,cAAZ,CAA2BJ,WAAW,CAACK,MAAZ,CAAmBC,QAA9C,CAAZ;AACAC,IAAAA,KAAK,CAACR,UAAU,CAACS,SAAX,CAAqBC,GAArB,GAA2B,aAA5B,EAA2C;AAC9CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYR,KADpB;AAEP,wBAAgB;AAFT;AADqC,KAA3C,CAAL,CAMGS,IANH,CAMQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KANX,EAM2B,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAN9B,EAOGH,IAPH,CAOQ,UAAAM,MAAM;AAAA,aACVhB,QAAQ,CAAC;AACPiB,QAAAA,IAAI,EAAExB,YADC;AAEPyB,QAAAA,OAAO,EAAEF;AAFF,OAAD,CADE;AAAA,KAPd;AAaD,GAhB0B;AAAA,CAApB;AAkBP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO;AAAA,SAAI,UAAApB,QAAQ,EAAI;AACnD,QAAIC,KAAK,GAAGH,WAAW,CAACI,cAAZ,CAA2BJ,WAAW,CAACK,MAAZ,CAAmBC,QAA9C,CAAZ;AAEAC,IAAAA,KAAK,CAACV,SAAS,CAAC0B,QAAV,GAAqB,uBAArB,GAA+CD,OAAhD,EAAyD;AAC5DZ,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYR,KADpB;AAEP,wBAAgB;AAFT;AADmD,KAAzD,CAAL,CAMGS,IANH,CAMQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KANX,EAOGF,IAPH,CAOQ,UAAAY,SAAS;AAAA,aACbtB,QAAQ,CAAC;AACPiB,QAAAA,IAAI,EAAEvB,wBADC;AAEPwB,QAAAA,OAAO,EAAEI;AAFF,OAAD,CADK;AAAA,KAPjB;AAaD,GAhBoC;AAAA,CAA9B;AAkBP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,IAAI;AAAA,SAAI,UAAAxB,QAAQ,EAAI;AACpD,QAAIC,KAAK,GAAGH,WAAW,CAACI,cAAZ,CAA2BJ,WAAW,CAACK,MAAZ,CAAmBC,QAA9C,CAAZ;AAEAC,IAAAA,KAAK,CACHV,SAAS,CAAC0B,QAAV,GAAqB,4BADlB,EAEH;AACEI,MAAAA,MAAM,EAAE,KADV;AAEEjB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYR,KADpB;AAEP,wBAAgB;AAFT;AAFX,KAFG,EASHyB,IAAI,CAACC,SAAL,CAAeH,IAAf,CATG,CAAL,CAWGd,IAXH,CAWQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAXX,EAYGF,IAZH,CAYQ,UAAAY,SAAS;AAAA,aACbtB,QAAQ,CAAC;AACPiB,QAAAA,IAAI,EAAEvB,wBADC;AAEPwB,QAAAA,OAAO,EAAEI;AAFF,OAAD,CADK;AAAA,KAZjB;AAkBD,GArBqC;AAAA,CAA/B","sourcesContent":["import { FETCH_ORDERS, FETCH_ORDER_WITH_DETAILS } from \"./types\";\r\nimport { apiConfig } from \"./config\";\r\nimport { adalApiFetch, adalConfig, authContext } from \"../adal/config\";\r\nexport const fetchOrders = () => dispatch => {\r\n  // adalApiFetch(fetch, \"/orders/get\", {});\r\n  var token = authContext.getCachedToken(authContext.config.clientId);\r\n  fetch(adalConfig.endpoints.api + \"/orders/get\", {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(res => res.json(), err => console.error(err))\r\n    .then(orders =>\r\n      dispatch({\r\n        type: FETCH_ORDERS,\r\n        payload: orders\r\n      })\r\n    );\r\n};\r\n\r\nexport const fetchFullOrder = orderId => dispatch => {\r\n  var token = authContext.getCachedToken(authContext.config.clientId);\r\n\r\n  fetch(apiConfig.endPoint + \"/orders/getFullOrder/\" + orderId, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .then(fullOrder =>\r\n      dispatch({\r\n        type: FETCH_ORDER_WITH_DETAILS,\r\n        payload: fullOrder\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateProductOrder = data => dispatch => {\r\n  var token = authContext.getCachedToken(authContext.config.clientId);\r\n\r\n  fetch(\r\n    apiConfig.endPoint + \"/orders/UpdateProductOrder\",\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    },\r\n    JSON.stringify(data)\r\n  )\r\n    .then(res => res.json())\r\n    .then(fullOrder =>\r\n      dispatch({\r\n        type: FETCH_ORDER_WITH_DETAILS,\r\n        payload: fullOrder\r\n      })\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}