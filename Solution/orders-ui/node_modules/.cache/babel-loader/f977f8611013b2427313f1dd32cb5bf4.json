{"ast":null,"code":"import { FETCH_ORDERS, FETCH_ORDER_WITH_DETAILS } from \"./types\";\nimport { apiConfig } from \"./config\";\nimport { adalApiFetch, authContext } from \"../adal/config\";\nexport var fetchOrders = function fetchOrders() {\n  return function (dispatch) {\n    adalApiFetch(fetch, authContext.endPoints.api + \"/orders/get\", {}) // var token = authContext.getCachedToken(authContext.config.clientId);\n    // fetch(apiConfig.endPoint + \"/orders/get\", {\n    //   // mode: \"no-cors\"\n    //   // method: \"GET\",\n    //   // headers: {\n    //   //   Authorization: \"Bearer \" + token,\n    //   //   \"Content-Type\": \"application/json\"\n    //   // }\n    // })\n    .then(function (res) {\n      return res.json();\n    }, function (err) {\n      return console.error(err);\n    }).then(function (orders) {\n      return dispatch({\n        type: FETCH_ORDERS,\n        payload: orders\n      });\n    });\n  };\n};\nexport var fetchFullOrder = function fetchFullOrder(orderId) {\n  return function (dispatch) {\n    fetch(apiConfig.endPoint + \"/orders/getFullOrder/\" + orderId, {\n      mode: \"no-cors\",\n      method: \"GET\",\n      headers: apiConfig.getHeader()\n    }, \"\").then(function (res) {\n      return res.json();\n    }).then(function (fullOrder) {\n      return dispatch({\n        type: FETCH_ORDER_WITH_DETAILS,\n        payload: fullOrder\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Leo\\Apps\\OrdersMgr\\orders-ui\\src\\actions\\orderAction.js"],"names":["FETCH_ORDERS","FETCH_ORDER_WITH_DETAILS","apiConfig","adalApiFetch","authContext","fetchOrders","dispatch","fetch","endPoints","api","then","res","json","err","console","error","orders","type","payload","fetchFullOrder","orderId","endPoint","mode","method","headers","getHeader","fullOrder"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,wBAAvB,QAAuD,SAAvD;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,gBAA1C;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC3CH,IAAAA,YAAY,CAACI,KAAD,EAAQH,WAAW,CAACI,SAAZ,CAAsBC,GAAtB,GAA4B,aAApC,EAAmD,EAAnD,CAAZ,CACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATF,KAUGC,IAVH,CAUQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAVX,EAU2B,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAV9B,EAWGH,IAXH,CAWQ,UAAAM,MAAM;AAAA,aACVV,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEjB,YADC;AAEPkB,QAAAA,OAAO,EAAEF;AAFF,OAAD,CADE;AAAA,KAXd;AAiBD,GAlB0B;AAAA,CAApB;AAoBP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO;AAAA,SAAI,UAAAd,QAAQ,EAAI;AACnDC,IAAAA,KAAK,CACHL,SAAS,CAACmB,QAAV,GAAqB,uBAArB,GAA+CD,OAD5C,EAEH;AACEE,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,MAAM,EAAE,KAFV;AAGEC,MAAAA,OAAO,EAAEtB,SAAS,CAACuB,SAAV;AAHX,KAFG,EAOH,EAPG,CAAL,CASGf,IATH,CASQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KATX,EAUGF,IAVH,CAUQ,UAAAgB,SAAS;AAAA,aACbpB,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEhB,wBADC;AAEPiB,QAAAA,OAAO,EAAEQ;AAFF,OAAD,CADK;AAAA,KAVjB;AAgBD,GAjBoC;AAAA,CAA9B","sourcesContent":["import { FETCH_ORDERS, FETCH_ORDER_WITH_DETAILS } from \"./types\";\r\nimport { apiConfig } from \"./config\";\r\nimport { adalApiFetch, authContext } from \"../adal/config\";\r\nexport const fetchOrders = () => dispatch => {\r\n  adalApiFetch(fetch, authContext.endPoints.api + \"/orders/get\", {})\r\n    // var token = authContext.getCachedToken(authContext.config.clientId);\r\n    // fetch(apiConfig.endPoint + \"/orders/get\", {\r\n    //   // mode: \"no-cors\"\r\n    //   // method: \"GET\",\r\n    //   // headers: {\r\n    //   //   Authorization: \"Bearer \" + token,\r\n    //   //   \"Content-Type\": \"application/json\"\r\n    //   // }\r\n    // })\r\n    .then(res => res.json(), err => console.error(err))\r\n    .then(orders =>\r\n      dispatch({\r\n        type: FETCH_ORDERS,\r\n        payload: orders\r\n      })\r\n    );\r\n};\r\n\r\nexport const fetchFullOrder = orderId => dispatch => {\r\n  fetch(\r\n    apiConfig.endPoint + \"/orders/getFullOrder/\" + orderId,\r\n    {\r\n      mode: \"no-cors\",\r\n      method: \"GET\",\r\n      headers: apiConfig.getHeader()\r\n    },\r\n    \"\"\r\n  )\r\n    .then(res => res.json())\r\n    .then(fullOrder =>\r\n      dispatch({\r\n        type: FETCH_ORDER_WITH_DETAILS,\r\n        payload: fullOrder\r\n      })\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}